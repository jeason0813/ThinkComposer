<UserControl x:Class="Instrumind.Common.Visualization.Widgets.ExtendedEditText"
         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
         xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
         xmlns:imcv="clr-namespace:Instrumind.Common.Visualization"
         xmlns:this="clr-namespace:Instrumind.Common.Visualization.Widgets"
         xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
         mc:Ignorable="d" d:DesignHeight="20" d:DesignWidth="100"
         Loaded="UserControl_Loaded" Unloaded="UserControl_Unloaded"
         MouseEnter="UserControl_MouseEnter" MouseLeave="UserControl_MouseLeave"
         Background="Transparent"> <!-- NOTE: Let the Transparent background to avoid flickering by hittesting on underneath control -->

    <DockPanel x:Name="WorkPanel" HorizontalAlignment="Stretch">
        <Popup x:Name="PopupSelectorList" DockPanel.Dock="Right" MouseLeave="UserControl_MouseLeave"
                PlacementTarget="{Binding ElementName=WorkPanel}" Placement="Bottom" AllowsTransparency="True"
                PopupAnimation="None" MinWidth="{Binding Path=ActualWidth, ElementName=WorkPanel}">
            <Border Background="White" BorderThickness="0.5" BorderBrush="LightGray">
                <!-- The next binding properties didn't work as expected:
                SelectedValuePath="{Binding Path=ValuesSourceMemberPath, RelativeSource={RelativeSource FindAncestor, AncestorType=this:ExtendedEditText, AncestorLevel=1}, Mode=OneWay}"
                SelectedItem="{Binding Path=Value, RelativeSource={RelativeSource FindAncestor, AncestorType=this:ExtendedEditText, AncestorLevel=1}, Mode=OneWay}" -->
                <ListBox x:Name="LbxSelectorList" HorizontalAlignment="Stretch" Background="Transparent" Focusable="False"
                         ItemsSource="{Binding Path=ValuesSource, RelativeSource={RelativeSource FindAncestor, AncestorType=this:ExtendedEditText, AncestorLevel=1}, Mode=OneWay}"
                         DisplayMemberPath="{Binding Path=ValuesSourceMemberPath, RelativeSource={RelativeSource FindAncestor, AncestorType=this:ExtendedEditText, AncestorLevel=1}, Mode=OneWay}"
                         SelectionChanged="LbxSelectorList_SelectionChanged">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Background" Value="WhiteSmoke" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
            </Border>
        </Popup>
        <!--Background="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type this:EntitledPanel}, ResourceId=ExpositorBrush}}"-->
        <!-- supressed until assign appropriate name: ToolTip="Select list item..." -->
        <Border x:Name="ListActioner" DockPanel.Dock="Right" CornerRadius="1" Margin="1"
                Background="WhiteSmoke"
                MouseLeftButtonDown="ListActioner_MouseLeftButtonDown">
            <!--<TextBlock Text="..." />-->
            <Polygon Stroke="Black" Fill="Black" Points="1,0 7,0, 4,6" Margin="2,6,2,1" />
        </Border>

        <Popup x:Name="PopupSelectorTree" DockPanel.Dock="Right" MouseLeave="UserControl_MouseLeave"
                PlacementTarget="{Binding ElementName=WorkPanel}" Placement="Bottom" AllowsTransparency="True"
                PopupAnimation="None" MinWidth="{Binding Path=ActualWidth, ElementName=WorkPanel}">
            <Border Background="White" BorderThickness="0.5" BorderBrush="LightGray">
                <!-- IMPORTANT: The TreeView is not freed after use, and create high memory-pressure if used repeatedly.
                                This is specially notorius if the Composition has many composite Ideas (hundreds).
                                Anyway, the memory is released after window closing. -->
                <TreeView x:Name="TrvSelectorTree" BorderThickness="0" HorizontalContentAlignment="Stretch" Padding="-4,0,0,0" Background="Transparent" Focusable="False"
                          ItemsSource="{Binding Path=CompositesSource, RelativeSource={RelativeSource FindAncestor, AncestorType=this:ExtendedEditText, AncestorLevel=1}, Mode=OneWay}"
                          SelectedItemChanged="TrvSelectorTree_SelectedItemChanged">
                    <TreeView.Style>
                        <Style>
                            <!--This Style is for hiding the ugly last-selected-item color marking that WPF uses to put.-->
                            <Style.Resources>
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                            </Style.Resources>
                        </Style>
                    </TreeView.Style>
                    <TreeView.Resources>
                        <imcv:EmptyStringToNullConverter x:Key="EmptyTextToNullConverter" />

                        <Style x:Key="StyItem" TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="3" />
                            <Setter Property="Height" Value="18" />
                            <Setter Property="Margin" Value="-2,1,-2,1" />
                            <Setter Property="ToolTip" Value="{Binding Summary, Converter={StaticResource EmptyTextToNullConverter}}" />
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter Property="Background" Value="WhiteSmoke" />
                            <!--<Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver}" Value="True">
                                    <Setter Property="Background" Value="LightSkyBlue" />
                                </DataTrigger>
                            </Style.Triggers>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeViewItem, AncestorLevel=1}, Mode=OneWay}"
                                             Value="True">
                                    <Setter Property="Background" Value="LightSkyBlue" />
                                </DataTrigger>
                            </Style.Triggers>-->
                        </Style>

                    </TreeView.Resources>
                    <TreeView.ItemTemplate>
                        <!--NOTE: The DataType property does not work on interfaces, just concrete types.
                                  But it's not necessary if all objects are of the same type-->
                        <HierarchicalDataTemplate ItemsSource="{Binding CompositeMembers}">
                            <Border Style="{StaticResource StyItem}">
                                <DockPanel>
                                    <Image DockPanel.Dock="Left" Source="{Binding Definitor.Pictogram}" Width="32" Height="16" Stretch="Uniform" Margin="1" />
                                    <Image DockPanel.Dock="Left" Source="{Binding Pictogram}" MaxWidth="32" MaxHeight="16" Stretch="Uniform" Margin="1" />
                                    <TextBlock DockPanel.Dock="Right" Text="{Binding DescriptiveCaption}" FontSize="10" FontStyle="Italic" Opacity="0.5" Margin="8,0,2,0" />
                                    <TextBlock DockPanel.Dock="Right" Text="{Binding NameCaption}" FontSize="10" Margin="2,0,2,0" />
                                </DockPanel>
                            </Border>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                    
                    <!-- THIS IS VERY SLOW WHEN "INTELLITRACE" IS ON...-->
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="IsExpanded" Value="True"/>
                            <!--It is very important to let this as One-Way binding to not unselect nodes from the TreeView-->
                            <!--<EventSetter Event="PreviewMouseLeftButtonDown" Handler="OnItemPreviewMouseLeftButtonDown" /> // WORKS BY TUNNELING-->
                        </Style>
                    </TreeView.ItemContainerStyle>
                </TreeView>
            </Border>
        </Popup>
        <!--Background="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type this:EntitledPanel}, ResourceId=ExpositorBrush}}"-->
        <!-- supressed until assign appropriate name: ToolTip="Select tree item..." -->
        <Border x:Name="TreeActioner" DockPanel.Dock="Right" CornerRadius="1" Margin="1"
                Background="WhiteSmoke"
                MouseLeftButtonDown="TreeActioner_MouseLeftButtonDown">
            <!--<TextBlock Text="..." />-->
            <Polygon Stroke="Black" Fill="Black" Points="1,3 4,0, 7,3 4,6" Margin="2,6,2,1" />
            <!--<Polygon Stroke="Black" Fill="Black" Points="1,0 7,0, 1,6 7,6" Margin="2,6,2,1" />-->
            <!-- <Polygon Stroke="Black" Fill="Black" Points="1,0 8,6, 8,0 1,6" Margin="2,6,2,1" /> -->
        </Border>

        <TextBox x:Name="Editor" x:FieldModifier="public" Text=""
                 Padding="0,-1,0,0" HorizontalAlignment="Stretch"
                 GotFocus="TextBox_GotFocus" LostFocus="TextBox_LostFocus"/>

    </DockPanel>
    
</UserControl>
