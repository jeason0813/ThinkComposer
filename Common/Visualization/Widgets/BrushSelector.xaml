<UserControl x:Class="Instrumind.Common.Visualization.Widgets.BrushSelector"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:this="clr-namespace:Instrumind.Common.Visualization.Widgets"
             Background="Transparent" BorderThickness="0" Padding="2"
             Loaded="UserControl_Loaded" Unloaded="UserControl_Unloaded" >
    <UserControl.Resources>
        <Style x:Key="SelectionStyle" TargetType="Shape">
            <Setter Property="Cursor" Value="Hand"/>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Fill" Value="White"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Fill" Value="LightGray"/>
                    <Setter Property="Cursor" Value="Arrow"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <StackPanel HorizontalAlignment="Center">
        <!--<TextBlock Text="Brush style" FontWeight="700" Foreground="DarkBlue"
                    Margin="2" Background="WhiteSmoke" />-->
        
        <DockPanel>
            <!--Rectangle for BRUSH SAMPLE //////////////////////////////////////////////////////////////////////////////////////// -->
            <Grid Width="36" Height="36">
                <Rectangle Width="30" Height="30" Fill="White" Stroke="LightGray" StrokeThickness="1.0" />
                <Ellipse Width="24" Height="24" Stroke="Black" StrokeThickness="3"/>
                <Rectangle x:Name="SelectedBrushExpo" Width="26" Height="26"
                            DockPanel.Dock="Left"
                            Fill="Gray" Opacity="1"
                            StrokeThickness="1"
                            Stroke="Transparent"
                            ToolTip="Sample color brush.">
                </Rectangle>
            </Grid>

            <!--Selector for GRADIENT MULTIPLICITY (SOLID, DOUBLE OR TRIPLE) ////////////////////////////////////////////////////// -->
            <this:BrushKindSelector x:Name="BrushKindPicker" DockPanel.Dock="Left" Margin="3" Cursor="Hand">
                <this:BrushKindSelector.LayoutTransform>
                    <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                </this:BrushKindSelector.LayoutTransform>
            </this:BrushKindSelector>

            <!--Switch for GRADIENT ORIENTATION /////////////////////////////////////////////////////////////////////////////////// -->
            <this:OrientationSelector x:Name="OrientationPicker" DockPanel.Dock="Left" Margin="3" Cursor="Hand"
                                        Visibility="{Binding GradientOrientationVisibility}">
                <this:OrientationSelector.LayoutTransform>
                    <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                </this:OrientationSelector.LayoutTransform>
            </this:OrientationSelector>

            <!--Filler-->
            <Grid />
        </DockPanel>

        <!--Individual Color Selectors Tab-Control -->
        <!--<TextBlock Text="Color palette" FontWeight="700" Foreground="DarkBlue" Padding="2,0,2,0"
                    Margin="2" Background="WhiteSmoke" />-->

        <TabControl x:Name="BrushColorsTab" TabStripPlacement="Left" BorderBrush="LightGray">
            <TabControl.Resources>
                <Style TargetType="TabItem">
                    <Setter Property="BorderBrush" Value="LightGray" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="BorderBrush" Value="WhiteSmoke" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TabControl.Resources>
            <TabItem x:Name="PrimaryBrushColorsPalette" Padding="2" Background="White" BorderThickness="0.0">
                <this:ColorSelector x:Name="PrimaryColorPicker" />
                <TabItem.Header >
                    <Rectangle x:Name="PrimaryPaletteHeader" Width="25.5" Height="25.5" Stroke="LightGray"
                               ToolTip="Primary Color"/>
                </TabItem.Header>
            </TabItem>
            <TabItem x:Name="SecondaryBrushColorsPalette" Padding="2" Background="White" BorderThickness="0.0" >
                <this:ColorSelector x:Name="SecondaryColorPicker" />
                <TabItem.Header >
                    <Rectangle x:Name="SecondaryPaletteHeader" Width="25.5" Height="25.5" Stroke="LightGray"
                               ToolTip="Secondary Color"/>
                </TabItem.Header>
            </TabItem>
            <TabItem x:Name="TertiaryBrushColorsPalette" Padding="2" Background="White" BorderThickness="0.0" >
                <this:ColorSelector x:Name="TertiaryColorPicker" />
                <TabItem.Header >
                    <Rectangle x:Name="TertiaryPaletteHeader" Width="25.5" Height="25.5" Stroke="LightGray"
                               ToolTip="Tertiary Color"/>
                </TabItem.Header>
            </TabItem>
        </TabControl>

        <!--Selectors for TRANSPARENCY /////////////////////////////////////////////////////////////////////////////////// -->
        <!--<TextBlock Text="Transparency" FontWeight="700" Foreground="DarkBlue" Padding="2,0,2,0"
                    Margin="2" Background="WhiteSmoke" />-->
        <this:TransparencySelector x:Name="TransparencyPicker" Margin="12,2,0,2" Cursor="Hand"
                                    ToolTip="Transparency/Opacity level." />

        <!--<TextBlock x:Name="HelpText" Text="Double-click to apply!"
                   Foreground="DarkBlue" Padding="2,0,2,0" TextWrapping="Wrap"
                   Background="Ivory" />-->
        <!--Cancelled: Just show for multi-brushes: Visibility="{Binding ElementName=SecondaryBrushColorsPalette, Path=Visibility}"-->
        <StackPanel x:Name="PnlMultiBrush" Orientation="Horizontal" HorizontalAlignment="Right">
            <!--NOTE: The Buttons shadow effect looks ugly under a Popup container.
                      Fortunately is not shown if applied on/after load.-->
            <this:PaletteButton x:Name="BtnOK" DockPanel.Dock="Right" Click="BtnOK_Click"
                                ButtonText="OK" Margin="1" ToolTip="Cancel." IsDefault="True"
                                ButtonImage="/Instrumind.Common;component/Visualization/Images/accept.png" />
            <this:PaletteButton x:Name="BtnCancel" DockPanel.Dock="Right" Click="BtnCancel_Click"
                                ButtonText="Cancel" Margin="1" ToolTip="Apply selected brush." IsCancel="True"
                                ButtonImage="/Instrumind.Common;component/Visualization/Images/cancel.png" />
        </StackPanel>
    </StackPanel>
</UserControl>
